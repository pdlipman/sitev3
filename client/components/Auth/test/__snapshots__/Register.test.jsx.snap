// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Register.jsx Register should render properly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Register
    anyTouched={false}
    array={
      Object {
        "insert": [Function],
        "move": [Function],
        "pop": [Function],
        "push": [Function],
        "remove": [Function],
        "removeAll": [Function],
        "shift": [Function],
        "splice": [Function],
        "swap": [Function],
        "unshift": [Function],
      }
    }
    asyncValidate={[Function]}
    asyncValidating={false}
    autofill={[Function]}
    blur={[Function]}
    change={[Function]}
    clearAsyncError={[Function]}
    clearSubmit={[Function]}
    clearSubmitErrors={[Function]}
    destroy={[Function]}
    dirty={false}
    dispatch={[Function]}
    error={undefined}
    errorMessage=""
    form="register"
    handleSubmit={[Function]}
    initialValues={undefined}
    initialize={[Function]}
    initialized={false}
    invalid={false}
    message={undefined}
    pristine={true}
    pure={true}
    register={[Function]}
    reset={[Function]}
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": [Function],
        },
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      }
    }
    submit={[Function]}
    submitFailed={false}
    submitSucceeded={false}
    submitting={false}
    touch={[Function]}
    triggerSubmit={undefined}
    untouch={[Function]}
    valid={true}
    validate={[Function]}
    warning={undefined}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        "",
        <form
          onSubmit={undefined}
        >
          <div
            className="row"
          >
            <div
              className="column"
            >
              <label
                htmlFor="firstName"
              >
                First Name
              </label>
              <Field
                className="form-control"
                component={[Function]}
                name="firstName"
                type="text"
              />
            </div>
            <div
              className="column"
            >
              <label
                htmlFor="lastName"
              >
                Last Name
              </label>
              <Field
                className="form-control"
                component={[Function]}
                name="lastName"
                type="text"
              />
            </div>
          </div>
          <div
            className="row"
          >
            <div
              className="column"
            >
              <label
                htmlFor="email"
              >
                Email
              </label>
              <Field
                className="form-control"
                component={[Function]}
                name="email"
                type="text"
              />
            </div>
          </div>
          <div
            className="row"
          >
            <div
              className="column"
            >
              <label
                htmlFor="password"
              >
                Password
              </label>
              <Field
                className="form-control"
                component={[Function]}
                name="password"
                type="password"
              />
            </div>
          </div>
          <button
            type="submit"
          >
            Register
          </button>
        </form>,
      ],
    },
    "ref": null,
    "rendered": Array [
      "",
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="row"
            >
              <div
                className="column"
              >
                <label
                  htmlFor="firstName"
                >
                  First Name
                </label>
                <Field
                  className="form-control"
                  component={[Function]}
                  name="firstName"
                  type="text"
                />
              </div>
              <div
                className="column"
              >
                <label
                  htmlFor="lastName"
                >
                  Last Name
                </label>
                <Field
                  className="form-control"
                  component={[Function]}
                  name="lastName"
                  type="text"
                />
              </div>
            </div>,
            <div
              className="row"
            >
              <div
                className="column"
              >
                <label
                  htmlFor="email"
                >
                  Email
                </label>
                <Field
                  className="form-control"
                  component={[Function]}
                  name="email"
                  type="text"
                />
              </div>
            </div>,
            <div
              className="row"
            >
              <div
                className="column"
              >
                <label
                  htmlFor="password"
                >
                  Password
                </label>
                <Field
                  className="form-control"
                  component={[Function]}
                  name="password"
                  type="password"
                />
              </div>
            </div>,
            <button
              type="submit"
            >
              Register
            </button>,
          ],
          "onSubmit": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="column"
                >
                  <label
                    htmlFor="firstName"
                  >
                    First Name
                  </label>
                  <Field
                    className="form-control"
                    component={[Function]}
                    name="firstName"
                    type="text"
                  />
                </div>,
                <div
                  className="column"
                >
                  <label
                    htmlFor="lastName"
                  >
                    Last Name
                  </label>
                  <Field
                    className="form-control"
                    component={[Function]}
                    name="lastName"
                    type="text"
                  />
                </div>,
              ],
              "className": "row",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      htmlFor="firstName"
                    >
                      First Name
                    </label>,
                    <Field
                      className="form-control"
                      component={[Function]}
                      name="firstName"
                      type="text"
                    />,
                  ],
                  "className": "column",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "First Name",
                      "htmlFor": "firstName",
                    },
                    "ref": null,
                    "rendered": "First Name",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "className": "form-control",
                      "component": [Function],
                      "name": "firstName",
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      htmlFor="lastName"
                    >
                      Last Name
                    </label>,
                    <Field
                      className="form-control"
                      component={[Function]}
                      name="lastName"
                      type="text"
                    />,
                  ],
                  "className": "column",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Last Name",
                      "htmlFor": "lastName",
                    },
                    "ref": null,
                    "rendered": "Last Name",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "className": "form-control",
                      "component": [Function],
                      "name": "lastName",
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="column"
              >
                <label
                  htmlFor="email"
                >
                  Email
                </label>
                <Field
                  className="form-control"
                  component={[Function]}
                  name="email"
                  type="text"
                />
              </div>,
              "className": "row",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label
                    htmlFor="email"
                  >
                    Email
                  </label>,
                  <Field
                    className="form-control"
                    component={[Function]}
                    name="email"
                    type="text"
                  />,
                ],
                "className": "column",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Email",
                    "htmlFor": "email",
                  },
                  "ref": null,
                  "rendered": "Email",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "className": "form-control",
                    "component": [Function],
                    "name": "email",
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="column"
              >
                <label
                  htmlFor="password"
                >
                  Password
                </label>
                <Field
                  className="form-control"
                  component={[Function]}
                  name="password"
                  type="password"
                />
              </div>,
              "className": "row",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label
                    htmlFor="password"
                  >
                    Password
                  </label>,
                  <Field
                    className="form-control"
                    component={[Function]}
                    name="password"
                    type="password"
                  />,
                ],
                "className": "column",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Password",
                    "htmlFor": "password",
                  },
                  "ref": null,
                  "rendered": "Password",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "className": "form-control",
                    "component": [Function],
                    "name": "password",
                    "type": "password",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "Register",
              "type": "submit",
            },
            "ref": null,
            "rendered": "Register",
            "type": "button",
          },
        ],
        "type": "form",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          "",
          <form
            onSubmit={undefined}
          >
            <div
              className="row"
            >
              <div
                className="column"
              >
                <label
                  htmlFor="firstName"
                >
                  First Name
                </label>
                <Field
                  className="form-control"
                  component={[Function]}
                  name="firstName"
                  type="text"
                />
              </div>
              <div
                className="column"
              >
                <label
                  htmlFor="lastName"
                >
                  Last Name
                </label>
                <Field
                  className="form-control"
                  component={[Function]}
                  name="lastName"
                  type="text"
                />
              </div>
            </div>
            <div
              className="row"
            >
              <div
                className="column"
              >
                <label
                  htmlFor="email"
                >
                  Email
                </label>
                <Field
                  className="form-control"
                  component={[Function]}
                  name="email"
                  type="text"
                />
              </div>
            </div>
            <div
              className="row"
            >
              <div
                className="column"
              >
                <label
                  htmlFor="password"
                >
                  Password
                </label>
                <Field
                  className="form-control"
                  component={[Function]}
                  name="password"
                  type="password"
                />
              </div>
            </div>
            <button
              type="submit"
            >
              Register
            </button>
          </form>,
        ],
      },
      "ref": null,
      "rendered": Array [
        "",
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="row"
              >
                <div
                  className="column"
                >
                  <label
                    htmlFor="firstName"
                  >
                    First Name
                  </label>
                  <Field
                    className="form-control"
                    component={[Function]}
                    name="firstName"
                    type="text"
                  />
                </div>
                <div
                  className="column"
                >
                  <label
                    htmlFor="lastName"
                  >
                    Last Name
                  </label>
                  <Field
                    className="form-control"
                    component={[Function]}
                    name="lastName"
                    type="text"
                  />
                </div>
              </div>,
              <div
                className="row"
              >
                <div
                  className="column"
                >
                  <label
                    htmlFor="email"
                  >
                    Email
                  </label>
                  <Field
                    className="form-control"
                    component={[Function]}
                    name="email"
                    type="text"
                  />
                </div>
              </div>,
              <div
                className="row"
              >
                <div
                  className="column"
                >
                  <label
                    htmlFor="password"
                  >
                    Password
                  </label>
                  <Field
                    className="form-control"
                    component={[Function]}
                    name="password"
                    type="password"
                  />
                </div>
              </div>,
              <button
                type="submit"
              >
                Register
              </button>,
            ],
            "onSubmit": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="column"
                  >
                    <label
                      htmlFor="firstName"
                    >
                      First Name
                    </label>
                    <Field
                      className="form-control"
                      component={[Function]}
                      name="firstName"
                      type="text"
                    />
                  </div>,
                  <div
                    className="column"
                  >
                    <label
                      htmlFor="lastName"
                    >
                      Last Name
                    </label>
                    <Field
                      className="form-control"
                      component={[Function]}
                      name="lastName"
                      type="text"
                    />
                  </div>,
                ],
                "className": "row",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        htmlFor="firstName"
                      >
                        First Name
                      </label>,
                      <Field
                        className="form-control"
                        component={[Function]}
                        name="firstName"
                        type="text"
                      />,
                    ],
                    "className": "column",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "children": "First Name",
                        "htmlFor": "firstName",
                      },
                      "ref": null,
                      "rendered": "First Name",
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "class",
                      "props": Object {
                        "className": "form-control",
                        "component": [Function],
                        "name": "firstName",
                        "type": "text",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        htmlFor="lastName"
                      >
                        Last Name
                      </label>,
                      <Field
                        className="form-control"
                        component={[Function]}
                        name="lastName"
                        type="text"
                      />,
                    ],
                    "className": "column",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Last Name",
                        "htmlFor": "lastName",
                      },
                      "ref": null,
                      "rendered": "Last Name",
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "class",
                      "props": Object {
                        "className": "form-control",
                        "component": [Function],
                        "name": "lastName",
                        "type": "text",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="column"
                >
                  <label
                    htmlFor="email"
                  >
                    Email
                  </label>
                  <Field
                    className="form-control"
                    component={[Function]}
                    name="email"
                    type="text"
                  />
                </div>,
                "className": "row",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      htmlFor="email"
                    >
                      Email
                    </label>,
                    <Field
                      className="form-control"
                      component={[Function]}
                      name="email"
                      type="text"
                    />,
                  ],
                  "className": "column",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Email",
                      "htmlFor": "email",
                    },
                    "ref": null,
                    "rendered": "Email",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "className": "form-control",
                      "component": [Function],
                      "name": "email",
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="column"
                >
                  <label
                    htmlFor="password"
                  >
                    Password
                  </label>
                  <Field
                    className="form-control"
                    component={[Function]}
                    name="password"
                    type="password"
                  />
                </div>,
                "className": "row",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      htmlFor="password"
                    >
                      Password
                    </label>,
                    <Field
                      className="form-control"
                      component={[Function]}
                      name="password"
                      type="password"
                    />,
                  ],
                  "className": "column",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Password",
                      "htmlFor": "password",
                    },
                    "ref": null,
                    "rendered": "Password",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "className": "form-control",
                      "component": [Function],
                      "name": "password",
                      "type": "password",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Register",
                "type": "submit",
              },
              "ref": null,
              "rendered": "Register",
              "type": "button",
            },
          ],
          "type": "form",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Register.jsx Register should render with error properly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Register
    anyTouched={false}
    array={
      Object {
        "insert": [Function],
        "move": [Function],
        "pop": [Function],
        "push": [Function],
        "remove": [Function],
        "removeAll": [Function],
        "shift": [Function],
        "splice": [Function],
        "swap": [Function],
        "unshift": [Function],
      }
    }
    asyncValidate={[Function]}
    asyncValidating={false}
    autofill={[Function]}
    blur={[Function]}
    change={[Function]}
    clearAsyncError={[Function]}
    clearSubmit={[Function]}
    clearSubmitErrors={[Function]}
    destroy={[Function]}
    dirty={false}
    dispatch={[Function]}
    error={undefined}
    errorMessage="Test: error message"
    form="register"
    handleSubmit={[Function]}
    initialValues={undefined}
    initialize={[Function]}
    initialized={false}
    invalid={false}
    message={undefined}
    pristine={true}
    pure={true}
    register={[Function]}
    reset={[Function]}
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": [Function],
        },
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      }
    }
    submit={[Function]}
    submitFailed={false}
    submitSucceeded={false}
    submitting={false}
    touch={[Function]}
    triggerSubmit={undefined}
    untouch={[Function]}
    valid={true}
    validate={[Function]}
    warning={undefined}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div>
          <span>
            <strong>
              Error:
            </strong>
             
            Test: error message
             
          </span>
        </div>,
        <form
          onSubmit={undefined}
        >
          <div
            className="row"
          >
            <div
              className="column"
            >
              <label
                htmlFor="firstName"
              >
                First Name
              </label>
              <Field
                className="form-control"
                component={[Function]}
                name="firstName"
                type="text"
              />
            </div>
            <div
              className="column"
            >
              <label
                htmlFor="lastName"
              >
                Last Name
              </label>
              <Field
                className="form-control"
                component={[Function]}
                name="lastName"
                type="text"
              />
            </div>
          </div>
          <div
            className="row"
          >
            <div
              className="column"
            >
              <label
                htmlFor="email"
              >
                Email
              </label>
              <Field
                className="form-control"
                component={[Function]}
                name="email"
                type="text"
              />
            </div>
          </div>
          <div
            className="row"
          >
            <div
              className="column"
            >
              <label
                htmlFor="password"
              >
                Password
              </label>
              <Field
                className="form-control"
                component={[Function]}
                name="password"
                type="password"
              />
            </div>
          </div>
          <button
            type="submit"
          >
            Register
          </button>
        </form>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": <span>
            <strong>
              Error:
            </strong>
             
            Test: error message
             
          </span>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <strong>
                Error:
              </strong>,
              " ",
              "Test: error message",
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Error:",
              },
              "ref": null,
              "rendered": "Error:",
              "type": "strong",
            },
            " ",
            "Test: error message",
            " ",
          ],
          "type": "span",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="row"
            >
              <div
                className="column"
              >
                <label
                  htmlFor="firstName"
                >
                  First Name
                </label>
                <Field
                  className="form-control"
                  component={[Function]}
                  name="firstName"
                  type="text"
                />
              </div>
              <div
                className="column"
              >
                <label
                  htmlFor="lastName"
                >
                  Last Name
                </label>
                <Field
                  className="form-control"
                  component={[Function]}
                  name="lastName"
                  type="text"
                />
              </div>
            </div>,
            <div
              className="row"
            >
              <div
                className="column"
              >
                <label
                  htmlFor="email"
                >
                  Email
                </label>
                <Field
                  className="form-control"
                  component={[Function]}
                  name="email"
                  type="text"
                />
              </div>
            </div>,
            <div
              className="row"
            >
              <div
                className="column"
              >
                <label
                  htmlFor="password"
                >
                  Password
                </label>
                <Field
                  className="form-control"
                  component={[Function]}
                  name="password"
                  type="password"
                />
              </div>
            </div>,
            <button
              type="submit"
            >
              Register
            </button>,
          ],
          "onSubmit": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="column"
                >
                  <label
                    htmlFor="firstName"
                  >
                    First Name
                  </label>
                  <Field
                    className="form-control"
                    component={[Function]}
                    name="firstName"
                    type="text"
                  />
                </div>,
                <div
                  className="column"
                >
                  <label
                    htmlFor="lastName"
                  >
                    Last Name
                  </label>
                  <Field
                    className="form-control"
                    component={[Function]}
                    name="lastName"
                    type="text"
                  />
                </div>,
              ],
              "className": "row",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      htmlFor="firstName"
                    >
                      First Name
                    </label>,
                    <Field
                      className="form-control"
                      component={[Function]}
                      name="firstName"
                      type="text"
                    />,
                  ],
                  "className": "column",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "First Name",
                      "htmlFor": "firstName",
                    },
                    "ref": null,
                    "rendered": "First Name",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "className": "form-control",
                      "component": [Function],
                      "name": "firstName",
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      htmlFor="lastName"
                    >
                      Last Name
                    </label>,
                    <Field
                      className="form-control"
                      component={[Function]}
                      name="lastName"
                      type="text"
                    />,
                  ],
                  "className": "column",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Last Name",
                      "htmlFor": "lastName",
                    },
                    "ref": null,
                    "rendered": "Last Name",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "className": "form-control",
                      "component": [Function],
                      "name": "lastName",
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="column"
              >
                <label
                  htmlFor="email"
                >
                  Email
                </label>
                <Field
                  className="form-control"
                  component={[Function]}
                  name="email"
                  type="text"
                />
              </div>,
              "className": "row",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label
                    htmlFor="email"
                  >
                    Email
                  </label>,
                  <Field
                    className="form-control"
                    component={[Function]}
                    name="email"
                    type="text"
                  />,
                ],
                "className": "column",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Email",
                    "htmlFor": "email",
                  },
                  "ref": null,
                  "rendered": "Email",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "className": "form-control",
                    "component": [Function],
                    "name": "email",
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="column"
              >
                <label
                  htmlFor="password"
                >
                  Password
                </label>
                <Field
                  className="form-control"
                  component={[Function]}
                  name="password"
                  type="password"
                />
              </div>,
              "className": "row",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label
                    htmlFor="password"
                  >
                    Password
                  </label>,
                  <Field
                    className="form-control"
                    component={[Function]}
                    name="password"
                    type="password"
                  />,
                ],
                "className": "column",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Password",
                    "htmlFor": "password",
                  },
                  "ref": null,
                  "rendered": "Password",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "className": "form-control",
                    "component": [Function],
                    "name": "password",
                    "type": "password",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "Register",
              "type": "submit",
            },
            "ref": null,
            "rendered": "Register",
            "type": "button",
          },
        ],
        "type": "form",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div>
            <span>
              <strong>
                Error:
              </strong>
               
              Test: error message
               
            </span>
          </div>,
          <form
            onSubmit={undefined}
          >
            <div
              className="row"
            >
              <div
                className="column"
              >
                <label
                  htmlFor="firstName"
                >
                  First Name
                </label>
                <Field
                  className="form-control"
                  component={[Function]}
                  name="firstName"
                  type="text"
                />
              </div>
              <div
                className="column"
              >
                <label
                  htmlFor="lastName"
                >
                  Last Name
                </label>
                <Field
                  className="form-control"
                  component={[Function]}
                  name="lastName"
                  type="text"
                />
              </div>
            </div>
            <div
              className="row"
            >
              <div
                className="column"
              >
                <label
                  htmlFor="email"
                >
                  Email
                </label>
                <Field
                  className="form-control"
                  component={[Function]}
                  name="email"
                  type="text"
                />
              </div>
            </div>
            <div
              className="row"
            >
              <div
                className="column"
              >
                <label
                  htmlFor="password"
                >
                  Password
                </label>
                <Field
                  className="form-control"
                  component={[Function]}
                  name="password"
                  type="password"
                />
              </div>
            </div>
            <button
              type="submit"
            >
              Register
            </button>
          </form>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": <span>
              <strong>
                Error:
              </strong>
               
              Test: error message
               
            </span>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <strong>
                  Error:
                </strong>,
                " ",
                "Test: error message",
                " ",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Error:",
                },
                "ref": null,
                "rendered": "Error:",
                "type": "strong",
              },
              " ",
              "Test: error message",
              " ",
            ],
            "type": "span",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="row"
              >
                <div
                  className="column"
                >
                  <label
                    htmlFor="firstName"
                  >
                    First Name
                  </label>
                  <Field
                    className="form-control"
                    component={[Function]}
                    name="firstName"
                    type="text"
                  />
                </div>
                <div
                  className="column"
                >
                  <label
                    htmlFor="lastName"
                  >
                    Last Name
                  </label>
                  <Field
                    className="form-control"
                    component={[Function]}
                    name="lastName"
                    type="text"
                  />
                </div>
              </div>,
              <div
                className="row"
              >
                <div
                  className="column"
                >
                  <label
                    htmlFor="email"
                  >
                    Email
                  </label>
                  <Field
                    className="form-control"
                    component={[Function]}
                    name="email"
                    type="text"
                  />
                </div>
              </div>,
              <div
                className="row"
              >
                <div
                  className="column"
                >
                  <label
                    htmlFor="password"
                  >
                    Password
                  </label>
                  <Field
                    className="form-control"
                    component={[Function]}
                    name="password"
                    type="password"
                  />
                </div>
              </div>,
              <button
                type="submit"
              >
                Register
              </button>,
            ],
            "onSubmit": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="column"
                  >
                    <label
                      htmlFor="firstName"
                    >
                      First Name
                    </label>
                    <Field
                      className="form-control"
                      component={[Function]}
                      name="firstName"
                      type="text"
                    />
                  </div>,
                  <div
                    className="column"
                  >
                    <label
                      htmlFor="lastName"
                    >
                      Last Name
                    </label>
                    <Field
                      className="form-control"
                      component={[Function]}
                      name="lastName"
                      type="text"
                    />
                  </div>,
                ],
                "className": "row",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        htmlFor="firstName"
                      >
                        First Name
                      </label>,
                      <Field
                        className="form-control"
                        component={[Function]}
                        name="firstName"
                        type="text"
                      />,
                    ],
                    "className": "column",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "children": "First Name",
                        "htmlFor": "firstName",
                      },
                      "ref": null,
                      "rendered": "First Name",
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "class",
                      "props": Object {
                        "className": "form-control",
                        "component": [Function],
                        "name": "firstName",
                        "type": "text",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        htmlFor="lastName"
                      >
                        Last Name
                      </label>,
                      <Field
                        className="form-control"
                        component={[Function]}
                        name="lastName"
                        type="text"
                      />,
                    ],
                    "className": "column",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Last Name",
                        "htmlFor": "lastName",
                      },
                      "ref": null,
                      "rendered": "Last Name",
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": null,
                      "nodeType": "class",
                      "props": Object {
                        "className": "form-control",
                        "component": [Function],
                        "name": "lastName",
                        "type": "text",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="column"
                >
                  <label
                    htmlFor="email"
                  >
                    Email
                  </label>
                  <Field
                    className="form-control"
                    component={[Function]}
                    name="email"
                    type="text"
                  />
                </div>,
                "className": "row",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      htmlFor="email"
                    >
                      Email
                    </label>,
                    <Field
                      className="form-control"
                      component={[Function]}
                      name="email"
                      type="text"
                    />,
                  ],
                  "className": "column",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Email",
                      "htmlFor": "email",
                    },
                    "ref": null,
                    "rendered": "Email",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "className": "form-control",
                      "component": [Function],
                      "name": "email",
                      "type": "text",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="column"
                >
                  <label
                    htmlFor="password"
                  >
                    Password
                  </label>
                  <Field
                    className="form-control"
                    component={[Function]}
                    name="password"
                    type="password"
                  />
                </div>,
                "className": "row",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      htmlFor="password"
                    >
                      Password
                    </label>,
                    <Field
                      className="form-control"
                      component={[Function]}
                      name="password"
                      type="password"
                    />,
                  ],
                  "className": "column",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Password",
                      "htmlFor": "password",
                    },
                    "ref": null,
                    "rendered": "Password",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "className": "form-control",
                      "component": [Function],
                      "name": "password",
                      "type": "password",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Register",
                "type": "submit",
              },
              "ref": null,
              "rendered": "Register",
              "type": "button",
            },
          ],
          "type": "form",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Register.jsx Register static function validate 1`] = `
Object {
  "email": "Please enter an email address.",
  "firstName": "Please enter a first name.",
  "lastName": "Please enter a last name.",
  "password": "Please enter a password.",
}
`;

exports[`Register.jsx Register static function validate 2`] = `Object {}`;
